name: kumiko

services:
  kumiko:
    container_name: kumiko
    image: ghcr.io/no767/kumiko:edge
    volumes:
      # Do not edit the next line. If you want to change the path of the configuration file, please edit the CONFIG_LOCATION variable
      - ${CONFIG_LOCATION}:/kumiko/bot/config.yml
    ports:
      - 8770:8770
    depends_on:
      - database
    command: sh -c '/kumiko/wait-for database:5432 -- echo "[Wait-for] PostgreSQL is fully up. Starting Kumiko." && /kumiko/start.sh'
    restart: always

  database:
    container_name: kumiko_postgres
    build:
      context: ./pg
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    restart: always

  kumiko-prometheus:
    container_name: kumiko_prometheus
    ports:
      - 9090:9090
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # first login uses admin/admin
  # add data source for http://kumiko-prometheus:9090 to get started
  kumiko-grafana:
    container_name: kumiko_grafana
    command: ['./run.sh', '-disable-reporting']
    ports:
      - 3000:3000
    image: grafana/grafana-enterprise:latest-ubuntu
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  database:
  prometheus_data:
  grafana_data: