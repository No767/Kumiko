name: Tests

on:
  push:
    branches:
      - dev
    
  pull_request:
    branches:
      - dev

env:
  POSTGRES_URI: postgresql://postgres:postgres@localhost:5432/postgres
  REDIS_URI: redis://localhost:6379/0
  TARGET_REVISION: rev5

  
jobs: 
  Test:
    name: Test (${{ matrix.version }})
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis/redis-stack-server:7.2.0-RC3
        ports: 
          - 6379:6379

      postgres:
        image: no767/akari-pg:edge
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        version: [3.8, 3.9, '3.10', '3.11']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Codecov Uploader
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: ${{ matrix.version }}

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v8

      - name: Install Nox
        run: |
          pip install --upgrade nox

      - name: Run Tests
        run: |
          RAW_PYTHON_VERSION=${{ matrix.version }}
          PYTHON_VERSION=$(echo $RAW_PYTHON_VERSION | sed 's/\.//')
          nox --sessions test$PYTHON_VERSION

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml