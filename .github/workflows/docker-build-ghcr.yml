name: Docker Build (GHCR)

on:
  push:
    paths-ignore:
      - "**.md"
    branches:
      - master
      - dev # mainly for testing rn

env:
  IMAGE: ghcr.io/no767/rin
  VERSION: latest
  DEV_TAGGED_VERSION: v2.2.0-dev

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.4

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ env.IMAGE }}
          VERSION=${{ env.VERSION }}
          SHORTREF=${GITHUB_SHA::8}
          BRANCH=${GITHUB_REF#refs/heads/}
          
          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          
          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          
          # If the BRANCH is dev, tag the image 'dev'.
          if [[ $BRANCH == dev ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:${{ env.DEV_TAGGED_VERSION }}-${SHORTREF}"
          fi


          # Allow for the semver to be appended by the commit sha. 
          # this is the preffered way to tag dev builds
          
          # Set output parameters
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
