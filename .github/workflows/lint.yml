name: Lint
on:
  push:
    branches:
      - dev
      
  pull_request:
    branches:
      - dev
      
# env:
#   DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres

jobs:
  Analyze:
    runs-on: ubuntu-latest
    
    # services:
    #    postgres:
    #     image: postgres:15
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: postgres
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        version: [3.8, 3.9, '3.10', '3.11']

    steps:
      - name: Checkout Repository  
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.version }}
        id: setup-python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: ${{ matrix.version }}

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v8

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v3.3.1
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-lint-${{ matrix.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry Dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          poetry install --with dev
          
      - name: Run Pyright
        run: |
          poetry run pyright Bot

      - name: Run Ruff
        # the rewrite for using PEP8 standards will come later
        run: |
          poetry run ruff Bot --ignore N
