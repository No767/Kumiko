From 9842f9daa66ed5706472fbbd2de7b0989406bf00 Mon Sep 17 00:00:00 2001
From: No767 <73260931+No767@users.noreply.github.com>
Date: Thu, 10 Feb 2022 23:50:42 -0800
Subject: [PATCH] Start Switching to Slash Commands

Moving forward, Rin will start using Slash Commands instead of the period prefix. Note that aliases are not going to work.
---
 Bot/Cogs/rinhelp.py    | 111 +++++++++++++++++-----------------
 Bot/Cogs/rininfo.py    |   7 ++-
 Bot/Cogs/twitter.py    |  23 +++----
 Bot/Cogs/uptime.py     |   7 ++-
 Bot/Cogs/version.py    |   7 ++-
 Bot/Cogs/waifu-pics.py | 133 +++++++++++++++++++++--------------------
 Bot/rinbot.py          |   2 +-
 7 files changed, 148 insertions(+), 142 deletions(-)

diff --git a/Bot/Cogs/rinhelp.py b/Bot/Cogs/rinhelp.py
index c890eb5..c95060e 100644
--- a/Bot/Cogs/rinhelp.py
+++ b/Bot/Cogs/rinhelp.py
@@ -1,19 +1,20 @@
 import asyncio
-import typing
+
 
 import discord
 import discord.ext
 import uvloop
 from discord.ext import commands
+from discord.commands import slash_command, Option
 
 
 class rinhelp(commands.Cog):
     def __init__(self, bot):
         self.bot = bot
         self.last_member = None
-
-    @commands.command(name="rinhelp", aliases=["help"])
-    async def on_message(self, ctx, *, search: typing.Optional[str] = None):
+        
+    @slash_command(name="rinhelp", description="The Help Page for Rin", guild_ids=[866199405090308116])
+    async def rinHelp(self, ctx, *, search: Option(str, choices=["Admin", "Twitter", "Reddit", "Minecraft", "Fun", "Misc", "Instagram", "Chat", "Misc", "DeviantArt", "Anime", "Top.gg", "Pinterest", "MyAnimeList/Jikan", "YouTube", "Tenor", "OpenAI"], required=False)):
         try:
             if search is None:
                 bot = self.bot
@@ -22,43 +23,43 @@ class rinhelp(commands.Cog):
                         **[GitHub](https://github.com/No767/Rin)** | **[Docs](https://docs.rinbot.live)** | **[Invite](https://top.gg/bot/865883525932253184/invite)** | **[Website](https://rinbot.live)**
                         """
                 embedVar.add_field(
-                    name="Admin", value="`.rinhelp admin`", inline=True)
+                    name="Admin", value="`/rinhelp admin`", inline=True)
                 embedVar.add_field(
-                    name="Twitter", value="`.rinhelp twitter`", inline=True
+                    name="Twitter", value="`/rinhelp twitter`", inline=True
                 )
                 embedVar.add_field(
-                    name="Reddit", value="`.rinhelp reddit`", inline=True
+                    name="Reddit", value="`/rinhelp reddit`", inline=True
                 )
                 embedVar.add_field(
-                    name="Minecraft", value="`.rinhelp mc`", inline=True)
+                    name="Minecraft", value="`/rinhelp mc`", inline=True)
                 embedVar.add_field(
-                    name="Fun", value="`.rinhelp fun`", inline=True)
+                    name="Fun", value="`/rinhelp fun`", inline=True)
                 embedVar.add_field(
-                    name="Instagram", value="`.rinhelp ig`", inline=True)
+                    name="Instagram", value="`/rinhelp ig`", inline=True)
                 embedVar.add_field(
-                    name="Chat", value="`.rinhelp chat`", inline=True)
+                    name="Chat", value="`/rinhelp chat`", inline=True)
                 embedVar.add_field(
-                    name="Misc", value="`.rinhelp misc`", inline=True)
+                    name="Misc", value="`/rinhelp misc`", inline=True)
                 embedVar.add_field(
-                    name="Deviantart", value="`.rinhelp da`", inline=True
+                    name="Deviantart", value="`/rinhelp da`", inline=True
                 )
                 embedVar.add_field(
-                    name="Anime", value="`.rinhelp anime`", inline=True)
+                    name="Anime", value="`/rinhelp anime`", inline=True)
                 embedVar.add_field(
-                    name="Top.gg", value="`.rinhelp topgg`", inline=True)
+                    name="Top.gg", value="`/rinhelp topgg`", inline=True)
                 embedVar.add_field(
-                    name="Pinterest", value="`.rinhelp pinterest`", inline=True
+                    name="Pinterest", value="`/rinhelp pinterest`", inline=True
                 )
                 embedVar.add_field(
-                    name="MyAnimeList/Jikan", value="`.rinhelp jikan`", inline=True
+                    name="MyAnimeList/Jikan", value="`/rinhelp jikan`", inline=True
                 )
                 embedVar.add_field(
-                    name="YouTube", value="`.rinhelp youtube`", inline=True
+                    name="YouTube", value="`/rinhelp youtube`", inline=True
                 )
                 embedVar.add_field(
-                    name="Tenor", value="`.rinhelp tenor`", inline=True)
+                    name="Tenor", value="`/rinhelp tenor`", inline=True)
                 embedVar.add_field(
-                    name="OpenAI", value="`.rinhelp openai`", inline=True
+                    name="OpenAI", value="`/rinhelp openai`", inline=True
                 )
                 embedVar.set_author(
                     name="Rin Help",
@@ -66,11 +67,11 @@ class rinhelp(commands.Cog):
                     icon_url=bot.user.display_avatar,
                 )
                 embedVar.set_footer(
-                    text='Remember, the command prefix for this bot is "."'
+                    text='Remember, the command prefix for this bot is "/"'
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) == "admin":
+            if search in ["admin", "Admin"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -95,9 +96,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Admin", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) == "twitter":
+            if str(search) in ["twitter", "Twitter"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -113,9 +114,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Twitter", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) == "reddit":
+            if str(search) in ["reddit", "Reddit"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -134,9 +135,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Reddit", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) in ("minecraft", "mc"):
+            if str(search) in ["minecraft", "mc", "Minecraft"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -192,9 +193,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Minecraft", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) == "fun":
+            if str(search) in ["fun", "Fun"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -226,9 +227,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Fun", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) in ("instagram", "ig"):
+            if str(search) in ["instagram", "ig", "Instgram"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -255,9 +256,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Instagram", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) == "chat":
+            if str(search) in ["chat", "Chat"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -272,9 +273,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Chat", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) == "misc":
+            if str(search) in ["misc", "Misc"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -311,9 +312,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Misc", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) in ("deviantart", "da"):
+            if str(search) in ["deviantart", "da", "DevintArt"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -347,9 +348,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Deviantart", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) == "anime":
+            if str(search) in ["anime", "Anime"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -365,9 +366,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Anime", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) in ["jikan", "jk", "myanimelist", "mal"]:
+            if str(search) in ["jikan", "jk", "myanimelist", "mal", "MyAnimeList/Jikan"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -402,9 +403,9 @@ class rinhelp(commands.Cog):
                     name="Rin Help - MyAnimeList/Jikan",
                     icon_url=bot.user.display_avatar,
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) == "topgg":
+            if str(search) in ["topgg", "Top.gg"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -420,9 +421,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Topgg", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) in ("pinterest", "pt"):
+            if str(search) in ["pinterest", "pt", "Pinterest"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -444,9 +445,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Pinterest", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) in ["youtube", "yt"]:
+            if str(search) in ["youtube", "yt", "YouTube"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -480,9 +481,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - YouTube", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) == "tenor":
+            if str(search) in ["tenor", "Tenor"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -521,9 +522,9 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - Tenor", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
-            if str(search) in ["openai", "ai", "gpt-3"]:
+            if str(search) in ["openai", "ai", "gpt-3", "OpenAI"]:
                 bot = self.bot
                 embedVar = discord.Embed(color=14414079)
                 embedVar.add_field(
@@ -544,7 +545,7 @@ class rinhelp(commands.Cog):
                 embedVar.set_author(
                     name="Rin Help - OpenAI", icon_url=bot.user.display_avatar
                 )
-                await ctx.send(embed=embedVar)
+                await ctx.respond(embed=embedVar)
 
         except Exception as e:
             bot = self.bot
@@ -552,7 +553,7 @@ class rinhelp(commands.Cog):
             embedVar.description = "The query failed."
             embedVar.add_field(name="Error", value=e, inline=True)
             embedVar.set_thumbnail(url=bot.user.display_avatar)
-            await ctx.send(embed=embedVar)
+            await ctx.respond(embed=embedVar)
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
 
diff --git a/Bot/Cogs/rininfo.py b/Bot/Cogs/rininfo.py
index 371457d..148f64f 100644
--- a/Bot/Cogs/rininfo.py
+++ b/Bot/Cogs/rininfo.py
@@ -3,13 +3,14 @@ import asyncio
 import discord
 import uvloop
 from discord.ext import commands
+from discord.commands import slash_command
 
 
 class info(commands.Cog):
     def __init__(self, bot):
         self.bot = bot
 
-    @commands.command(name="rininfo", aliases=["info"])
+    @slash_command(name="rininfo", description="Info about Rin", guild_ids=[866199405090308116])
     async def rinInfo(self, ctx):
         bot = self.bot
         embedVar = discord.Embed(color=14414079)
@@ -29,9 +30,9 @@ class info(commands.Cog):
             value="If you have any questions, or any issues, or just an idea that you would like to add, please report them on the [GitHub Issue Tracker](https://github.com/No767/Rin/issues). Note that Rin does not any type of support discord server nor do I plan to make one to begin with.",
         )
         embedVar.set_footer(
-            text="Project Lead Maintainer and Original Creator of Rin: No767\nOriginal Creator of EasyBot.py and EasyBot Plugins: Isaac-To\n\nFun fact: use .version to check the current version of Rin"
+            text="Project Lead Maintainer and Original Creator of Rin: No767\nOriginal Creator of EasyBot.py and EasyBot Plugins: Isaac-To\n\nFun fact: use /version to check the current version of Rin"
         )
-        await ctx.send(embed=embedVar)
+        await ctx.respond(embed=embedVar)
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
 
diff --git a/Bot/Cogs/twitter.py b/Bot/Cogs/twitter.py
index b8e9fdc..3ae9a84 100644
--- a/Bot/Cogs/twitter.py
+++ b/Bot/Cogs/twitter.py
@@ -7,6 +7,7 @@ import orjson
 import uvloop
 from discord.ext import commands
 from dotenv import load_dotenv
+from discord.commands import slash_command
 
 load_dotenv()
 
@@ -17,7 +18,7 @@ class TwitterV1(commands.Cog):
     def __init__(self, bot):
         self.bot = bot
 
-    @commands.command(name="twitter-search", aliases=["ts"])
+    @slash_command(name="twitter-search", description="Returns up to 5 recent tweets given the Twitter user", guild_ids=[866199405090308116])
     async def twitter_search(self, ctx, *, user: str):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
             headers = {"Authorization": f"Bearer {Bearer_Token}"}
@@ -40,7 +41,7 @@ class TwitterV1(commands.Cog):
                             value=data["meta"]["result_count"],
                             inline=True,
                         )
-                        await ctx.send(embed=embedVar)
+                        await ctx.respond(embed=embedVar)
                     else:
                         embed = discord.Embed()
                         excludedKeys = {
@@ -93,7 +94,7 @@ class TwitterV1(commands.Cog):
                                         dictItem["user"]["profile_image_url_https"]
                                     ).replace("_normal", "_bigger")
                                 )
-                                await ctx.send(embed=embed)
+                                await ctx.respond(embed=embed)
                             else:
                                 for keys2, val2 in dictItem.items():
                                     if keys2 not in excludedKeys:
@@ -111,12 +112,12 @@ class TwitterV1(commands.Cog):
                                         dictItem["user"]["profile_image_url_https"]
                                     ).replace("_normal", "_bigger")
                                 )
-                                await ctx.send(embed=embed)
+                                await ctx.respond(embed=embed)
                 except Exception as e:
                     embedError = discord.Embed()
                     embedError.description = "Something went wrong. Please try again."
                     embedError.add_field(name="Error", value=e, inline=True)
-                    await ctx.send(embed=embedError)
+                    await ctx.respond(embed=embedError)
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
 
@@ -127,7 +128,7 @@ class TwitterV1(commands.Cog):
         if isinstance(error, commands.MissingRequiredArgument):
             embedVar = discord.Embed(color=discord.Color.from_rgb(255, 51, 51))
             embedVar.description = f"Missing a requireed argument: {error.param}"
-            msg = await ctx.send(embed=embedVar, delete_after=10)
+            msg = await ctx.respond(embed=embedVar, delete_after=10)
             await msg.delete(delay=10)
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
@@ -137,7 +138,7 @@ class TwitterV2(commands.Cog):
     def __init__(self, bot):
         self.bot = bot
 
-    @commands.command(name="twitter-user", aliases=["tu"])
+    @slash_command(name="twitter-user", description="Returns Info about the given Twitter user", guild_ids=[866199405090308116])
     async def twitter_user(self, ctx, *, user: str):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
             headers = {"Authorization": f"Bearer {Bearer_Token}"}
@@ -198,7 +199,7 @@ class TwitterV2(commands.Cog):
                                     "_normal", "_bigger"
                                 )
                             )
-                            await ctx.send(embed=embedVar)
+                            await ctx.respond(embed=embedVar)
                         else:
                             for keys2, val2 in userItem.items():
                                 if keys2 not in itemFilter:
@@ -215,13 +216,13 @@ class TwitterV2(commands.Cog):
                                     "_normal", "_bigger"
                                 )
                             )
-                            await ctx.send(embed=embedVar)
+                            await ctx.respond(embed=embedVar)
 
                 except Exception as e:
                     embedError2 = discord.Embed()
                     embedError2.description = "Something went wrong. Please try again."
                     embedError2.add_field(name="Error", value=e, inline=True)
-                    await ctx.send(embed=embedError2)
+                    await ctx.respond(embed=embedError2)
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
 
@@ -232,7 +233,7 @@ class TwitterV2(commands.Cog):
         if isinstance(error, commands.MissingRequiredArgument):
             embedVar = discord.Embed(color=discord.Color.from_rgb(255, 51, 51))
             embedVar.description = f"Missing a requireed argument: {error.param}"
-            msg = await ctx.send(embed=embedVar, delete_after=10)
+            msg = await ctx.respond(embed=embedVar, delete_after=10)
             await msg.delete(delay=10)
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
diff --git a/Bot/Cogs/uptime.py b/Bot/Cogs/uptime.py
index fd5bd7b..aea9f6f 100644
--- a/Bot/Cogs/uptime.py
+++ b/Bot/Cogs/uptime.py
@@ -5,6 +5,7 @@ import time
 import discord
 import uvloop
 from discord.ext import commands
+from discord.commands import slash_command
 
 
 class UptimeV1(commands.Cog):
@@ -15,14 +16,14 @@ class UptimeV1(commands.Cog):
     async def on_ready(self):
         global startTime
         startTime = time.time()
-
-    @commands.command(name="uptime")
+    
+    @slash_command(name="uptime", description="Returns Uptime for Rin", guild_ids=[866199405090308116])
     async def botUptime(self, ctx):
         uptime = datetime.timedelta(
             seconds=int(round(time.time() - startTime)))
         embed = discord.Embed(color=discord.Color.from_rgb(245, 227, 255))
         embed.description = f"Rin's Uptime: `{uptime.days} Days, {uptime.seconds//3600} Hours, {(uptime.seconds//60)%60} Minutes, {(uptime.seconds%60)} Seconds`"
-        await ctx.send(embed=embed)
+        await ctx.respond(embed=embed)
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
 
diff --git a/Bot/Cogs/version.py b/Bot/Cogs/version.py
index caab931..d98754f 100644
--- a/Bot/Cogs/version.py
+++ b/Bot/Cogs/version.py
@@ -3,17 +3,18 @@ import asyncio
 import discord
 import uvloop
 from discord.ext import commands
+from discord.commands import slash_command
 
 
 class VersionV1(commands.Cog):
     def __init__(self, bot):
         self.bot = bot
 
-    @commands.command(name="version")
+    @slash_command(name="version", description="Returns Current Version of Rin", guild_ids=[866199405090308116])
     async def version(self, ctx):
         embedVar = discord.Embed()
-        embedVar.description = "Build Version: v1.4.4"
-        await ctx.send(embed=embedVar)
+        embedVar.description = "Build Version: v1.5.0-dev"
+        await ctx.respond(embed=embedVar)
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
 
diff --git a/Bot/Cogs/waifu-pics.py b/Bot/Cogs/waifu-pics.py
index 9363c5e..be76001 100644
--- a/Bot/Cogs/waifu-pics.py
+++ b/Bot/Cogs/waifu-pics.py
@@ -1,66 +1,67 @@
-import asyncio
-import random
-
-import aiohttp
-import discord
-import orjson
-import uvloop
-from discord.ext import commands
-
-
-class waifuPics(commands.Cog):
-    def __init__(self, bot):
-        self.bot = bot
-
-    @commands.command(name="waifupics", aliases=["wp"])
-    async def on_messsage(self, ctx):
-        waifu_list = [
-            "waifu",
-            "neko",
-            "shinobu",
-            "megumin",
-            "bully",
-            "cuddle",
-            "cry",
-            "hug",
-            "awoo",
-            "kiss",
-            "lick",
-            "pat",
-            "smug",
-            "bonk",
-            "yeet",
-            "blush",
-            "smile",
-            "wave",
-            "highfive",
-            "handhold",
-            "nom",
-            "bite",
-            "glomp",
-            "slap",
-            "kill",
-            "kick",
-            "happy",
-            "wink",
-            "poke",
-            "dance",
-            "cringe",
-        ]
-        searchterm = random.choice(waifu_list)
-        async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
-            async with session.get(f"https://api.waifu.pics/sfw/{searchterm}") as r:
-                waifu_pics = await r.json()
-                try:
-                    await ctx.send(waifu_pics["url"])
-                except Exception as e:
-                    embedVar = discord.Embed()
-                    embedVar.description = "The query was not successful"
-                    embedVar.add_field(name="Reason", value=e, inline=True)
-                    await ctx.send(embed=embedVar)
-
-    asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
-
-
-def setup(bot):
-    bot.add_cog(waifuPics(bot))
+import asyncio
+import random
+
+import aiohttp
+import discord
+import orjson
+import uvloop
+from discord.ext import commands
+from discord.commands import slash_command
+
+
+class waifuPics(commands.Cog):
+    def __init__(self, bot):
+        self.bot = bot
+
+    @slash_command(name="waifupics", description="Returns a random image of a waifu from waifu.pics", guild_ids=[866199405090308116])
+    async def on_messsage(self, ctx):
+        waifu_list = [
+            "waifu",
+            "neko",
+            "shinobu",
+            "megumin",
+            "bully",
+            "cuddle",
+            "cry",
+            "hug",
+            "awoo",
+            "kiss",
+            "lick",
+            "pat",
+            "smug",
+            "bonk",
+            "yeet",
+            "blush",
+            "smile",
+            "wave",
+            "highfive",
+            "handhold",
+            "nom",
+            "bite",
+            "glomp",
+            "slap",
+            "kill",
+            "kick",
+            "happy",
+            "wink",
+            "poke",
+            "dance",
+            "cringe",
+        ]
+        searchterm = random.choice(waifu_list)
+        async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
+            async with session.get(f"https://api.waifu.pics/sfw/{searchterm}") as r:
+                waifu_pics = await r.json()
+                try:
+                    await ctx.respond(waifu_pics["url"])
+                except Exception as e:
+                    embedVar = discord.Embed()
+                    embedVar.description = "The query was not successful"
+                    embedVar.add_field(name="Reason", value=e, inline=True)
+                    await ctx.respond(embed=embedVar)
+
+    asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
+
+
+def setup(bot):
+    bot.add_cog(waifuPics(bot))
diff --git a/Bot/rinbot.py b/Bot/rinbot.py
index f2aeb04..10bcf32 100644
--- a/Bot/rinbot.py
+++ b/Bot/rinbot.py
@@ -47,7 +47,7 @@ for extension in initial_extensions:
 # Adds in the bot presence
 @bot.event
 async def on_ready():
-    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name=".rinhelp"))
+    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="/rinhelp"))
 
 # Run the bot
 bot.run(TOKEN)
-- 
2.35.1

