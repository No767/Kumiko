From 476d7b427afc89a5ce2bcd9039d62994b716590c Mon Sep 17 00:00:00 2001
From: No767 <73260931+No767@users.noreply.github.com>
Date: Sat, 23 Apr 2022 23:37:06 -0700
Subject: [PATCH] Swap to SIMDJSON for Large Content Parsing

Orjson has issues with that, so it seems like SIMDJSON does a better job of parsing the data
---
 Bot/Cogs/deviantart.py   | 12 +++++++-----
 Bot/Cogs/discord-bots.py |  6 ++++--
 Bot/Cogs/hypixel.py      | 10 ++++++----
 Bot/Cogs/jikan.py        | 25 ++++++++++++++-----------
 Bot/Cogs/mangadex.py     | 16 +++++++++-------
 Bot/Cogs/mcsrvstats.py   |  6 ++++--
 Bot/Cogs/modrinth.py     | 18 ++++++++++--------
 Bot/Cogs/openai-gpt3.py  |  9 +++++----
 Bot/Cogs/spiget.py       |  8 +++++---
 Bot/Cogs/tenor.py        | 18 +++++++++---------
 Bot/Cogs/top-gg.py       |  7 ++++---
 Bot/Cogs/twitter.py      |  7 ++++---
 Bot/Cogs/waifu-pics.py   |  4 +++-
 Bot/Cogs/youtube.py      | 16 +++++++++-------
 14 files changed, 93 insertions(+), 69 deletions(-)

diff --git a/Bot/Cogs/deviantart.py b/Bot/Cogs/deviantart.py
index 82a6179..c07670e 100644
--- a/Bot/Cogs/deviantart.py
+++ b/Bot/Cogs/deviantart.py
@@ -10,6 +10,7 @@ from discord.ext import commands
 from dotenv import load_dotenv
 from sqlalchemy import Column, MetaData, String, Table
 from sqlalchemy.ext.asyncio import create_async_engine
+import simdjson
 
 load_dotenv()
 
@@ -17,6 +18,7 @@ Password = os.getenv("Postgres_Password")
 Server_IP = os.getenv("Postgres_Server_IP")
 Username = os.getenv("Postgres_Username")
 
+parser = simdjson.Parser()
 
 class tokenFetcher:
     def __init__(self):
@@ -62,7 +64,7 @@ class DeviantArtV1(commands.Cog):
                 params=params,
             ) as r:
                 deviation = await r.content.read()
-                deviationMain = orjson.loads(deviation)
+                deviationMain = parser.parse(deviation, recursive=True)
                 embedVar = discord.Embed(
                     color=discord.Color.from_rgb(255, 214, 214))
                 try:
@@ -165,7 +167,7 @@ class DeviantArtV2(commands.Cog):
                 "https://www.deviantart.com/api/v1/oauth2/browse/newest", params=params
             ) as resp:
                 art = await resp.content.read()
-                artMain = orjson.loads(art)
+                artMain = parser.parse(art, recursive=True)
                 embedVar = discord.Embed(
                     color=discord.Color.from_rgb(255, 156, 192))
                 try:
@@ -252,7 +254,7 @@ class DeviantArtV3(commands.Cog):
                 "https://www.deviantart.com/api/v1/oauth2/browse/popular", params=params
             ) as response:
                 pop = await response.content.read()
-                popMain = orjson.loads(pop)
+                popMain = parser.parse(pop, recursive=True)
                 embedVar = discord.Embed(
                     color=discord.Color.from_rgb(255, 250, 181))
                 try:
@@ -340,7 +342,7 @@ class DeviantArtV4(commands.Cog):
                 "https://www.deviantart.com/api/v1/oauth2/browse/tags", params=params
             ) as rep:
                 tags = await rep.content.read()
-                tagsMain = orjson.loads(tags)
+                tagsMain = parser.parse(tags, recursive=True)
                 embedVar = discord.Embed(
                     color=discord.Color.from_rgb(235, 186, 255))
                 try:
@@ -425,7 +427,7 @@ class DeviantArtV5(commands.Cog):
                 params=params,
             ) as respon:
                 users = await respon.content.read()
-                usersMain = orjson.loads(users)
+                usersMain = parser.parse(users, recursive=True)
                 usersFilter = [
                     "bio",
                     "tagline",
diff --git a/Bot/Cogs/discord-bots.py b/Bot/Cogs/discord-bots.py
index 87ad3ae..cd09fee 100644
--- a/Bot/Cogs/discord-bots.py
+++ b/Bot/Cogs/discord-bots.py
@@ -8,9 +8,11 @@ import uvloop
 from discord.commands import Option, slash_command
 from discord.ext import commands
 from dotenv import load_dotenv
+import simdjson
 
 load_dotenv()
 apiKey = os.getenv("Discord_Bots_API_Key")
+parser = simdjson.Parser()
 
 
 class DiscordBotsV1(commands.Cog):
@@ -39,7 +41,7 @@ class DiscordBotsV1(commands.Cog):
                 "https://discord.bots.gg/api/v1/bots", headers=headers, params=params
             ) as r:
                 data = await r.content.read()
-                dataMain = orjson.loads(data)
+                dataMain = parser.parse(data, recursive=True)
                 filterMain = [
                     "avatarURL",
                     "coOwners",
@@ -90,7 +92,7 @@ class DiscordBotsV2(commands.Cog):
                 f"https://discord.bots.gg/api/v1/bots/{bot_id}", headers=headers
             ) as response:
                 data2 = await response.content.read()
-                dataMain2 = orjson.loads(data2)
+                dataMain2 = parser.parse(data2, recursive=True)
                 embedVar = discord.Embed()
                 filterMain2 = [
                     "coOwners",
diff --git a/Bot/Cogs/hypixel.py b/Bot/Cogs/hypixel.py
index 0b4e2e7..de24e04 100644
--- a/Bot/Cogs/hypixel.py
+++ b/Bot/Cogs/hypixel.py
@@ -8,10 +8,12 @@ import uvloop
 from discord.commands import slash_command
 from discord.ext import commands
 from dotenv import load_dotenv
+import simdjson
 
 load_dotenv()
 
 hypixel_api_key = os.getenv("Hypixel_API_Key")
+parser = simdjson.Parser()
 
 
 class hypixel_api(commands.Cog):
@@ -29,7 +31,7 @@ class hypixel_api(commands.Cog):
                 "https://api.hypixel.net/player", params=params
             ) as r:
                 player = await r.content.read()
-                playerMain = orjson.loads(player)
+                playerMain = parser.parse(player, recursive=True)
                 try:
                     if str(playerMain["success"]) == "True":
                         discord_embed = discord.Embed(
@@ -100,7 +102,7 @@ class hypixel_player_count(commands.Cog):
                 "https://api.hypixel.net/counts", params=params
             ) as response:
                 status = await response.content.read()
-                statusMain = orjson.loads(status)
+                statusMain = parser.parse(status, recursive=True)
                 try:
                     embedVar = discord.Embed(
                         title="Games Player Count",
@@ -135,7 +137,7 @@ class hypixel_status(commands.Cog):
                 "https://api.hypixel.net/status", params=params
             ) as rep:
                 player_statusv3 = await rep.content.read()
-                playerStatusMain = orjson.loads(player_statusv3)
+                playerStatusMain = parser.parse(player_statusv3, recursive=True)
                 try:
                     if str(playerStatusMain["success"]) == "True":
                         filterKeys = ["session"]
@@ -189,7 +191,7 @@ class networkPunishments(commands.Cog):
                 "https://api.hypixel.net/punishmentstats", params=params
             ) as r:
                 stats = await r.content.read()
-                statsMain = orjson.loads(stats)
+                statsMain = parser.parse(stats, recursive=True)
                 try:
                     embedVar = discord.Embed(
                         title="Total Amounts of Punishments Given",
diff --git a/Bot/Cogs/jikan.py b/Bot/Cogs/jikan.py
index f7455d0..558d85c 100644
--- a/Bot/Cogs/jikan.py
+++ b/Bot/Cogs/jikan.py
@@ -6,7 +6,9 @@ import orjson
 import uvloop
 from discord.commands import Option, slash_command
 from discord.ext import commands
+import simdjson
 
+parser = simdjson.Parser()
 
 class JikanV1(commands.Cog):
     def __init__(self, bot):
@@ -24,7 +26,7 @@ class JikanV1(commands.Cog):
                 "https://api.jikan.moe/v4/anime/", params=params
             ) as r:
                 data = await r.content.read()
-                dataMain = orjson.loads(data)
+                dataMain = parser.parse(data, recursive=True)
                 filterList = [
                     "images",
                     "title",
@@ -102,7 +104,7 @@ class JikanV2(commands.Cog):
                 "https://api.jikan.moe/v4/manga", params=params
             ) as response:
                 data = await response.content.read()
-                dataMain2 = orjson.loads(data)
+                dataMain2 = parser.parse(data, recursive=True)
                 filterList = [
                     "title",
                     "images",
@@ -184,7 +186,8 @@ class JikanV3(commands.Cog):
     async def animeRandom(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
             async with session.get("https://api.jikan.moe/v4/random/anime") as response:
-                data = await response.json()
+                data = await response.content.read()
+                dataMain = parser.parse(data, recursive=True)
                 mainFilter = [
                     "images",
                     "trailer",
@@ -203,9 +206,9 @@ class JikanV3(commands.Cog):
                 ]
                 try:
                     embedVar = discord.Embed()
-                    embedVar.title = data["data"]["title"]
-                    embedVar.description = data["data"]["synopsis"]
-                    for key, value in data["data"].items():
+                    embedVar.title = dataMain["data"]["title"]
+                    embedVar.description = dataMain["data"]["synopsis"]
+                    for key, value in dataMain["data"].items():
                         if key not in mainFilter:
                             embedVar.add_field(
                                 name=str(key).replace("_", " ").capitalize(),
@@ -213,7 +216,7 @@ class JikanV3(commands.Cog):
                                 inline=True,
                             )
                     embedVar.set_image(
-                        url=data["data"]["images"]["jpg"]["large_image_url"]
+                        url=dataMain["data"]["images"]["jpg"]["large_image_url"]
                     )
                     await ctx.respond(embed=embedVar)
                 except Exception as e:
@@ -237,7 +240,7 @@ class JikanV4(commands.Cog):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
             async with session.get("https://api.jikan.moe/v4/random/manga") as r:
                 data = await r.content.read()
-                dataMain3 = orjson.loads(data)
+                dataMain3 = parser.parse(data, recursive=True)
                 mangaFilter = [
                     "title",
                     "published",
@@ -296,7 +299,7 @@ class JikanV5(commands.Cog):
                     f"https://api.jikan.moe/v4/seasons/{year}/{season}"
                 ) as response:
                     seasons = await response.content.read()
-                    seasonsMain = orjson.loads(seasons)
+                    seasonsMain = parser.parse(seasons, recursive=True)
                     mainSeasonsFilter = [
                         "images",
                         "trailer",
@@ -356,7 +359,7 @@ class JikanV6(commands.Cog):
                 "https://api.jikan.moe/v4/seasons/upcoming"
             ) as full_response:
                 data = await full_response.content.read()
-                dataMain5 = orjson.loads(data)
+                dataMain5 = parser.parse(data, recursive=True)
                 mainFilter = [
                     "broadcast",
                     "title",
@@ -404,7 +407,7 @@ class JikanV7(commands.Cog):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
             async with session.get(f"https://api.jikan.moe/v4/users/{username}") as r:
                 data = await r.content.read()
-                dataMain6 = orjson.loads(data)
+                dataMain6 = parser.parse(data, recursive=True)
                 userFilter = ["username", "images"]
                 try:
                     embedVar = discord.Embed()
diff --git a/Bot/Cogs/mangadex.py b/Bot/Cogs/mangadex.py
index 37e0a82..731ba2a 100644
--- a/Bot/Cogs/mangadex.py
+++ b/Bot/Cogs/mangadex.py
@@ -6,7 +6,9 @@ import orjson
 import uvloop
 from discord.commands import Option, slash_command
 from discord.ext import commands
+import simdjson
 
+parser = simdjson.Parser()
 
 class MangaDexV1(commands.Cog):
     def __init__(self, bot):
@@ -29,7 +31,7 @@ class MangaDexV1(commands.Cog):
                 f"https://api.mangadex.org/manga/", params=params
             ) as r:
                 data = await r.content.read()
-                dataMain = orjson.loads(data)
+                dataMain = parser.parse(data, recursive=True)
                 embedVar = discord.Embed()
                 mangaFilter = [
                     "tags",
@@ -77,7 +79,7 @@ class MangaDexV1(commands.Cog):
                                 async with session.get(
                                     f"https://api.mangadex.org/cover/{coverArtID}"
                                 ) as rp:
-                                    cover_art_data = await rp.json()
+                                    cover_art_data = await rp.json(loads=orjson.loads)
                                     cover_art = cover_art_data["data"]["attributes"][
                                         "fileName"
                                     ]
@@ -124,7 +126,7 @@ class MangaDexV2(commands.Cog):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
             async with session.get("https://api.mangadex.org/manga/random") as r:
                 data2 = await r.content.read()
-                dataMain2 = orjson.loads(data2)
+                dataMain2 = parser.parse(data2, recursive=True)
                 mangaFilter2 = [
                     "tags",
                     "title",
@@ -181,7 +183,7 @@ class MangaDexV2(commands.Cog):
                                 async with session.get(
                                     f"https://api.mangadex.org/cover/{coverArtID2}"
                                 ) as rp:
-                                    cover_art_data2 = await rp.json()
+                                    cover_art_data2 = await rp.json(loads=orjson.loads)
                                     cover_art2 = cover_art_data2["data"]["attributes"][
                                         "fileName"
                                     ]
@@ -247,7 +249,7 @@ class MangaDexV3(commands.Cog):
                 "https://api.mangadex.org/group", params=params
             ) as totally_another_response:
                 md_data2 = await totally_another_response.content.read()
-                mdDataMain = orjson.loads(md_data2)
+                mdDataMain = parser.parse(md_data2, recursive=True)
                 embed2 = discord.Embed()
                 mdFilter = ["altNames", "description", "name"]
                 try:
@@ -301,7 +303,7 @@ class MangaDexV4(commands.Cog):
                 f"https://api.mangadex.org/group/{scanlation_id}"
             ) as another_response:
                 payload = await another_response.content.read()
-                payloadMain = orjson.loads(payload)
+                payloadMain = parser.parse(payload, recursive=True)
                 try:
                     if payloadMain["data"] is None:
                         embed3 = discord.Embed()
@@ -391,7 +393,7 @@ class MangaDexV6(commands.Cog):
                 "https://api.mangadex.org/author", params=params
             ) as author_response:
                 author_payload = await author_response.content.read()
-                authorPayloadMain = orjson.loads(author_payload)
+                authorPayloadMain = parser.parse(author_payload, recursive=True)
                 embedVar = discord.Embed()
                 try:
                     authorFilter = ["imageUrl", "name", "biography"]
diff --git a/Bot/Cogs/mcsrvstats.py b/Bot/Cogs/mcsrvstats.py
index ca115db..679a105 100644
--- a/Bot/Cogs/mcsrvstats.py
+++ b/Bot/Cogs/mcsrvstats.py
@@ -6,7 +6,9 @@ import orjson
 import uvloop
 from discord.commands import slash_command
 from discord.ext import commands
+import simdjson
 
+parser = simdjson.Parser()
 
 class mcsrvstats(commands.Cog):
     def __init__(self, bot):
@@ -20,7 +22,7 @@ class mcsrvstats(commands.Cog):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
             async with session.get(f"https://api.mcsrvstat.us/2/{server}") as r:
                 mcsrv = await r.content.read()
-                mcsrvMain = orjson.loads(mcsrv)
+                mcsrvMain = parser.parse(mcsrv, recursive=True)
                 image_link = f"https://api.mcsrvstat.us/icon/{server}"
                 try:
                     if str(mcsrvMain["online"]) == "True":
@@ -104,7 +106,7 @@ class bedrock_mcsrvstats(commands.Cog):
         async with aiohttp.ClientSession(json_serialize=orjson.loads) as session:
             async with session.get(f"https://api.mcsrvstat.us/bedrock/2/{server}") as r:
                 bedmcsrv = await r.content.read()
-                bedmcsrvMain = orjson.loads(bedmcsrv)
+                bedmcsrvMain = parser.parse(bedmcsrv, recursive=True)
                 bedimage_link = f"https://api.mcsrvstat.us/icon/{server}"
                 try:
                     if str(bedmcsrvMain["online"]) == "True":
diff --git a/Bot/Cogs/modrinth.py b/Bot/Cogs/modrinth.py
index bb125b4..aa94bbf 100644
--- a/Bot/Cogs/modrinth.py
+++ b/Bot/Cogs/modrinth.py
@@ -6,7 +6,9 @@ import orjson
 import uvloop
 from discord.commands import Option, slash_command
 from discord.ext import commands
+import simdjson
 
+parser = simdjson.Parser()
 
 class ModrinthV1(commands.Cog):
     def __init__(self, bot):
@@ -34,7 +36,7 @@ class ModrinthV1(commands.Cog):
                 "https://api.modrinth.com/v2/search", params=params
             ) as r:
                 data = await r.content.read()
-                dataMain = orjson.loads(data)
+                dataMain = parser.parse(data)
                 modFilter = ["title", "gallery", "icon_url", "description"]
                 embedVar = discord.Embed()
                 try:
@@ -75,7 +77,7 @@ class ModrinthV2(commands.Cog):
             ) as res:
                 try:
                     modData = await res.content.read()
-                    modDataMain = orjson.loads(modData)
+                    modDataMain = parser.parse(modData, recursive=True)
                     modDataFilter = [
                         "versions",
                         "license",
@@ -144,7 +146,7 @@ class ModrinthV3(commands.Cog):
                 f"https://api.modrinth.com/v2/project/{mod_name}/version", params=params
             ) as res:
                 versionData = await res.content.read()
-                versionDataMain = orjson.loads(versionData)
+                versionDataMain = parser.parse(versionData, recursive=True)
                 versionFilter = [
                     "changelog",
                     "name",
@@ -202,7 +204,7 @@ class ModrinthV4(commands.Cog):
                 f"https://api.modrinth.com/v2/version/{mod_version_id}"
             ) as r:
                 data = await r.content.read()
-                dataMain3 = orjson.loads(data)
+                dataMain3 = parser.parse(data, recursive=True)
                 versionFilter = ["changelog", "name", "dependencies", "files"]
                 embedVar = discord.Embed()
                 try:
@@ -248,7 +250,7 @@ class ModrinthV5(commands.Cog):
                 f"https://api.modrinth.com/v2/user/{username}"
             ) as response:
                 userData = await response.content.read()
-                userDataMain = orjson.loads(userData)
+                userDataMain = parser.parse(userData, recursive=True)
                 embedVar = discord.Embed()
                 userFilter = ["bio", "username", "avatar_url"]
                 try:
@@ -287,7 +289,7 @@ class ModrinthV6(commands.Cog):
                 f"https://api.modrinth.com/v2/user/{username}/projects"
             ) as r:
                 data = await r.content.read()
-                dataMain6 = orjson.loads(data)
+                dataMain6 = parser.parse(data, recursive=True)
                 userProjectsFilter = [
                     "body",
                     "license",
@@ -350,7 +352,7 @@ class ModrinthV7(commands.Cog):
                 f"https://api.modrinth.com/v2/project/{project}/members"
             ) as r:
                 projectData = await r.content.read()
-                projectDataMain = orjson.loads(projectData)
+                projectDataMain = parser.parse(projectData, recursive=True)
                 projectTeamFilter = ["bio", "avatar_url", "username"]
                 embedVar = discord.Embed()
                 try:
@@ -394,7 +396,7 @@ class ModrinthV8(commands.Cog):
                 f"https://api.modrinth.com/v2/team/{team_id}/members"
             ) as r:
                 teamData = await r.content.read()
-                teamDataMain = orjson.loads(teamData)
+                teamDataMain = parser.parse(teamData, recursive=True)
                 teamFilter = ["bio", "avatar_url", "username"]
                 embedVar = discord.Embed()
                 try:
diff --git a/Bot/Cogs/openai-gpt3.py b/Bot/Cogs/openai-gpt3.py
index 46582b5..830c746 100644
--- a/Bot/Cogs/openai-gpt3.py
+++ b/Bot/Cogs/openai-gpt3.py
@@ -9,11 +9,12 @@ import uvloop
 from discord.commands import Option, slash_command
 from discord.ext import commands
 from dotenv import load_dotenv
+import simdjson
 
 load_dotenv()
 
 OpenAI_API_KEY = os.getenv("OpenAI_API_Key")
-
+parser = simdjson.Parser()
 
 class OpenAI1(commands.Cog):
     def __init__(self, bot):
@@ -48,7 +49,7 @@ class OpenAI1(commands.Cog):
                 json=payload,
             ) as r:
                 data = await r.content.read()
-                dataMain = orjson.loads(data)
+                dataMain = parser.parse(data, recursive=True)
                 try:
                     embedVar = discord.Embed()
                     embedVar.description = dataMain["choices"][0]["text"]
@@ -108,7 +109,7 @@ class OpenAI2(commands.Cog):
                 json=payload,
             ) as poster:
                 data = await poster.content.read()
-                dataMain2 = orjson.loads(data)
+                dataMain2 = parser.parse(data, recursive=True)
                 try:
                     embedVar = discord.Embed()
                     for dictItem in dataMain2["selected_examples"]:
@@ -158,7 +159,7 @@ class OpenAI3(commands.Cog):
                 "https://api.openai.com/v1/answers", headers=headers, json=payload
             ) as response:
                 data = await response.content.read()
-                dataMain3 = orjson.loads(data)
+                dataMain3 = parser.parse(data, recursive=True)
                 try:
                     embedVar = discord.Embed()
                     embedVar.description = (
diff --git a/Bot/Cogs/spiget.py b/Bot/Cogs/spiget.py
index 123a30b..a2ee090 100644
--- a/Bot/Cogs/spiget.py
+++ b/Bot/Cogs/spiget.py
@@ -6,7 +6,9 @@ import orjson
 import uvloop
 from discord.commands import Option, slash_command
 from discord.ext import commands
+import simdjson
 
+parser = simdjson.Parser()
 
 class SpigetV2(commands.Cog):
     def __init__(self, bot):
@@ -30,7 +32,7 @@ class SpigetV2(commands.Cog):
                 params=params,
             ) as r:
                 resource = await r.content.read()
-                resourceMain = orjson.loads(resource)
+                resourceMain = parser.parse(resource, recursive=True)
                 try:
                     for dictItem in resourceMain:
                         thumbnail = (
@@ -144,7 +146,7 @@ class SpigetV3(commands.Cog):
                 params=params,
             ) as r:
                 data = await r.content.read()
-                dataMain = orjson.loads(data)
+                dataMain = parser.parse(data, recursive=True)
                 authorFilter = ["icon", "name", "identities"]
                 embedVar = discord.Embed()
                 try:
@@ -182,7 +184,7 @@ class SpigetV4(commands.Cog):
                 "https://api.spiget.org/v2/status", headers=headers
             ) as res:
                 total_stats = await res.content.read()
-                totalStatsMain = orjson.loads(total_stats)
+                totalStatsMain = parser.parse(total_stats, recursive=True)
                 try:
                     embedVar = discord.Embed(
                         color=discord.Color.from_rgb(173, 156, 255)
diff --git a/Bot/Cogs/tenor.py b/Bot/Cogs/tenor.py
index e950ea7..6f9dbd6 100644
--- a/Bot/Cogs/tenor.py
+++ b/Bot/Cogs/tenor.py
@@ -8,11 +8,11 @@ import uvloop
 from discord.commands import Option, slash_command
 from discord.ext import commands
 from dotenv import load_dotenv
-
+import simdjson
 load_dotenv()
 
 Tenor_API_Key = os.getenv("Tenor_API_Key")
-
+parser = simdjson.Parser()
 
 class TenorV1(commands.Cog):
     def __init__(self, bot):
@@ -35,7 +35,7 @@ class TenorV1(commands.Cog):
             }
             async with session.get("https://g.tenor.com/v1/search", params=params) as r:
                 data = await r.content.read()
-                dataMain = orjson.loads(data)
+                dataMain = parser.parse(data, recursive=True)
                 try:
                     embedVar = discord.Embed()
                     filterList = [
@@ -95,7 +95,7 @@ class TenorV2(commands.Cog):
                 "https://g.tenor.com/v1/search", params=params
             ) as re:
                 data2 = await re.content.read()
-                dataMain2 = orjson.loads(data2)
+                dataMain2 = parser.parse(data2, recursive=True)
                 try:
                     embedVar1 = discord.Embed()
                     embedVar1.title = dataMain2["results"][0]["content_description"]
@@ -132,7 +132,7 @@ class TenorV3(commands.Cog):
                 "https://g.tenor.com/v1/trending", params=params
             ) as response:
                 data3 = await response.content.read()
-                dataMain3 = orjson.loads(data3)
+                dataMain3 = parser.parse(data3, recursive=True)
                 try:
                     embedVar = discord.Embed()
                     filterList2 = [
@@ -192,7 +192,7 @@ class TenorV4(commands.Cog):
                 "https://g.tenor.com/v1/search_suggestions", params=params
             ) as resp:
                 data5 = await resp.content.read()
-                dataMain5 = orjson.loads(data5)
+                dataMain5 = parser.parse(data5, recursive=True)
                 try:
                     embedVar = discord.Embed()
                     embedVar.title = "Search Suggestions"
@@ -224,7 +224,7 @@ class TenorV5(commands.Cog):
                 "https://g.tenor.com/v1/trending_terms", params=params
             ) as rep:
                 data6 = await rep.content.read()
-                dataMain6 = orjson.loads(data6)
+                dataMain6 = parser.parse(data6, recursive=True)
                 try:
                     embedVar = discord.Embed()
                     embedVar.title = "Trending Search Terms"
@@ -261,7 +261,7 @@ class TenorV6(commands.Cog):
                 "https://g.tenor.com/v1/gifs", params=params
             ) as respon:
                 data7 = await respon.content.read()
-                dataMain7 = orjson.loads(data7)
+                dataMain7 = parser.parse(data7, recursive=True)
                 try:
                     embedVar = discord.Embed()
                     filterList2 = [
@@ -325,7 +325,7 @@ class TenorV7(commands.Cog):
                 "https://g.tenor.com/v1/random", params=params
             ) as object3:
                 data8 = await object3.content.read()
-                dataMain8 = orjson.loads(data8)
+                dataMain8 = parser.parse(data8, recursive=True)
                 try:
                     embedVar = discord.Embed()
                     for dict_items in dataMain8["results"]:
diff --git a/Bot/Cogs/top-gg.py b/Bot/Cogs/top-gg.py
index b049c0f..0a9a319 100644
--- a/Bot/Cogs/top-gg.py
+++ b/Bot/Cogs/top-gg.py
@@ -8,11 +8,12 @@ import uvloop
 from discord.commands import Option, slash_command
 from discord.ext import commands
 from dotenv import load_dotenv
+import simdjson
 
 load_dotenv()
 
 apiKey = os.getenv("Top_GG_API_Key")
-
+parser = simdjson.Parser()
 
 class TopGGV1(commands.Cog):
     def __init__(self, bot):
@@ -29,7 +30,7 @@ class TopGGV1(commands.Cog):
                 f"https://top.gg/api/bots/{bot_id}", headers=headers
             ) as r:
                 getOneBotInfo = await r.content.read()
-                getOneBotInfoMain = orjson.loads(getOneBotInfo)
+                getOneBotInfoMain = parser.parse(getOneBotInfo, recursive=True)
                 try:
                     embedVar = discord.Embed(
                         title=getOneBotInfoMain["username"],
@@ -74,7 +75,7 @@ class TopGGV2(commands.Cog):
                 f"https://top.gg/api/users/{user_id}", headers=headers
             ) as response:
                 user = await response.content.read()
-                userMain = orjson.loads(user)
+                userMain = parser.parse(user, recursive=True)
                 try:
                     if "error" in userMain:
                         embed = discord.Embed()
diff --git a/Bot/Cogs/twitter.py b/Bot/Cogs/twitter.py
index 6ddc0ed..4ffd520 100644
--- a/Bot/Cogs/twitter.py
+++ b/Bot/Cogs/twitter.py
@@ -8,11 +8,12 @@ import uvloop
 from discord.commands import slash_command
 from discord.ext import commands
 from dotenv import load_dotenv
+import simdjson
 
 load_dotenv()
 
 Bearer_Token = os.getenv("Twitter_Bearer_Token")
-
+parser = simdjson.Parser()
 
 class TwitterV1(commands.Cog):
     def __init__(self, bot):
@@ -32,7 +33,7 @@ class TwitterV1(commands.Cog):
                 params=params,
             ) as r:
                 data = await r.content.read()
-                dataMain = orjson.loads(data)
+                dataMain = parser.parse(data, recursive=True)
 
                 try:
                     if dataMain["statuses"] is None:
@@ -142,7 +143,7 @@ class TwitterV2(commands.Cog):
                 params=params,
             ) as resp:
                 data2 = await resp.content.read()
-                dataMain2 = orjson.loads(data2)
+                dataMain2 = parser.parse(data2, recursive=True)
                 itemFilter = {
                     "profile_image_url_https",
                     "id",
diff --git a/Bot/Cogs/waifu-pics.py b/Bot/Cogs/waifu-pics.py
index ff52fda..b289a31 100644
--- a/Bot/Cogs/waifu-pics.py
+++ b/Bot/Cogs/waifu-pics.py
@@ -7,7 +7,9 @@ import orjson
 import uvloop
 from discord.commands import slash_command
 from discord.ext import commands
+import simdjson
 
+parser = simdjson.Parser()
 
 class waifuPics(commands.Cog):
     def __init__(self, bot):
@@ -55,7 +57,7 @@ class waifuPics(commands.Cog):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
             async with session.get(f"https://api.waifu.pics/sfw/{searchterm}") as r:
                 waifu_pics = await r.content.read()
-                waifu_pics_main = orjson.loads(waifu_pics)
+                waifu_pics_main = parser.parse(waifu_pics, recursive=True)
                 try:
                     await ctx.respond(waifu_pics_main["url"])
                 except Exception as e:
diff --git a/Bot/Cogs/youtube.py b/Bot/Cogs/youtube.py
index 8201c84..51301b6 100644
--- a/Bot/Cogs/youtube.py
+++ b/Bot/Cogs/youtube.py
@@ -8,11 +8,13 @@ import uvloop
 from discord.commands import Option, slash_command
 from discord.ext import commands
 from dotenv import load_dotenv
+import simdjson
 
 load_dotenv()
 
 YouTube_API_Key = os.getenv("YouTube_API_Key")
 
+parser = simdjson.Parser()
 
 class YoutubeV1(commands.Cog):
     def __init__(self, bot):
@@ -37,7 +39,7 @@ class YoutubeV1(commands.Cog):
                 "https://www.googleapis.com/youtube/v3/search", params=params
             ) as r:
                 data = await r.content.read()
-                dataMain = orjson.loads(data)
+                dataMain = parser.parse(data, recursive=True)
                 try:
                     embedVar = discord.Embed(
                         color=discord.Color.from_rgb(212, 255, 223)
@@ -100,7 +102,7 @@ class YoutubeV2(commands.Cog):
                 "https://www.googleapis.com/youtube/v3/search", params=search_params
             ) as response:
                 search_data = await response.content.read()
-                searchDataMain = orjson.loads(search_data)
+                searchDataMain = parser.parse(search_data, recursive=True)
                 channel_id = searchDataMain["items"][0]["id"]["channelId"]
                 params = {
                     "key": YouTube_API_Key,
@@ -111,7 +113,7 @@ class YoutubeV2(commands.Cog):
                     "https://www.googleapis.com/youtube/v3/channels", params=params
                 ) as re:
                     data = await re.content.read()
-                    dataMain3 = orjson.loads(data)
+                    dataMain3 = parser.parse(data, recursive=True)
                     try:
                         embedVar = discord.Embed(
                             color=discord.Color.from_rgb(255, 0, 0)
@@ -182,7 +184,7 @@ class YoutubeV3(commands.Cog):
                 "https://www.googleapis.com/youtube/v3/search", params=search_params
             ) as response2:
                 search_data = await response2.content.read()
-                searchDataMain = orjson.loads(search_data)
+                searchDataMain = parser.parse(search_data, recursive=True)
                 channel_id = searchDataMain["items"][0]["id"]["channelId"]
                 main_params = {
                     "key": YouTube_API_Key,
@@ -195,7 +197,7 @@ class YoutubeV3(commands.Cog):
                     params=main_params,
                 ) as r2:
                     data = await r2.content.read()
-                    dataMain = orjson.loads(data)
+                    dataMain = parser.parse(data, recursive=True)
                     try:
                         embedVar = discord.Embed(
                             color=discord.Color.from_rgb(255, 224, 224)
@@ -271,7 +273,7 @@ class YoutubeV4(commands.Cog):
                 "https://www.googleapis.com/youtube/v3/commentThreads", params=params
             ) as r:
                 data = await r.content.read()
-                dataMain4 = orjson.loads(data)
+                dataMain4 = parser.parse(data, recursive=True)
                 try:
                     if r.status == 403:
                         embedVar = discord.Embed()
@@ -379,7 +381,7 @@ class YoutubeV5(commands.Cog):
                 "https://www.googleapis.com/youtube/v3/videos", params=params
             ) as another_response:
                 data = await another_response.content.read()
-                dataMain5 = orjson.loads(data)
+                dataMain5 = parser.parse(data, recursive=True)
                 try:
                     embed = discord.Embed(
                         color=discord.Color.from_rgb(255, 0, 0))
-- 
2.36.0

