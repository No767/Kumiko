From 7a85f8135a543b3e4387967c72e8465bd7700831 Mon Sep 17 00:00:00 2001
From: No767 <73260931+No767@users.noreply.github.com>
Date: Sun, 27 Mar 2022 23:26:02 -0700
Subject: [PATCH] Remove Guild IDs For All Slash Commands

basically meaning that it's ready for prod
---
 Bot/Cogs/advice.py           |  89 +++++++++++++++--------------
 Bot/Cogs/bot-info.py         | 105 +++++++++++++++++------------------
 Bot/Cogs/deviantart.py       |   3 +-
 Bot/Cogs/discord-bots.py     |   6 +-
 Bot/Cogs/first-frc-events.py |   6 +-
 Bot/Cogs/help.py             |   3 +-
 Bot/Cogs/hypixel.py          |   4 --
 Bot/Cogs/jikan.py            |   7 ---
 Bot/Cogs/jisho.py            |   1 -
 Bot/Cogs/mangadex.py         |   6 --
 Bot/Cogs/mcsrvstats.py       |   2 -
 Bot/Cogs/modrinth.py         |   8 ---
 Bot/Cogs/openai-gpt3.py      |   3 -
 Bot/Cogs/qrcode.py           |  12 ----
 Bot/Cogs/reddit.py           |   7 ---
 Bot/Cogs/rinhelp.py          |   1 -
 Bot/Cogs/rininfo.py          |   2 +-
 Bot/Cogs/rininvite.py        |  50 +++++++++--------
 Bot/Cogs/rinping.py          |   8 +--
 Bot/Cogs/spiget.py           |   4 --
 Bot/Cogs/tenor.py            |   7 ---
 Bot/Cogs/top-gg.py           |   2 -
 Bot/Cogs/twitter.py          |   2 -
 Bot/Cogs/uptime.py           |   1 -
 Bot/Cogs/version.py          |   1 -
 Bot/Cogs/waifu-generator.py  |   1 -
 Bot/Cogs/waifu-pics.py       |   1 -
 Bot/Cogs/youtube.py          |   5 --
 28 files changed, 132 insertions(+), 215 deletions(-)

diff --git a/Bot/Cogs/advice.py b/Bot/Cogs/advice.py
index d5757c4..18d5d32 100644
--- a/Bot/Cogs/advice.py
+++ b/Bot/Cogs/advice.py
@@ -1,45 +1,44 @@
-import asyncio
-
-import aiohttp
-import discord
-import orjson
-import uvloop
-from discord.commands import slash_command
-from discord.ext import commands
-
-
-class advice_slip(commands.Cog):
-    def __init__(self, bot):
-        self.bot = bot
-
-    @slash_command(
-        name="advice",
-        description="Gives some advice from Adviceslip",
-        guild_ids=[866199405090308116],
-    )
-    async def adviceSlip(self, ctx):
-        async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
-            async with session.get("https://api.adviceslip.com/advice") as r:
-                advice_slip = await r.content.read()
-                advice_slip_formatted = orjson.loads(advice_slip)
-                try:
-                    embedVar = discord.Embed(
-                        color=discord.Color.from_rgb(251, 204, 255)
-                    )
-                    embedVar.description = f"{advice_slip_formatted['slip']['advice']}"
-                    embedVar.set_footer(
-                        text=f"Requested by {ctx.user.name}",
-                        icon_url=ctx.user.display_avatar,
-                    )
-                    await ctx.respond(embed=embedVar)
-                except Exception as e:
-                    embedVar = discord.Embed()
-                    embedVar.description = "The query failed. Please try again."
-                    embedVar.add_field(name="Reason", value=e, inline=True)
-                    await ctx.respond(embed=embedVar)
-
-    asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
-
-
-def setup(bot):
-    bot.add_cog(advice_slip(bot))
+import asyncio
+
+import aiohttp
+import discord
+import orjson
+import uvloop
+from discord.commands import slash_command
+from discord.ext import commands
+
+
+class advice_slip(commands.Cog):
+    def __init__(self, bot):
+        self.bot = bot
+
+    @slash_command(
+        name="advice",
+        description="Gives some advice from Adviceslip"
+    )
+    async def adviceSlip(self, ctx):
+        async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
+            async with session.get("https://api.adviceslip.com/advice") as r:
+                advice_slip = await r.content.read()
+                advice_slip_formatted = orjson.loads(advice_slip)
+                try:
+                    embedVar = discord.Embed(
+                        color=discord.Color.from_rgb(251, 204, 255)
+                    )
+                    embedVar.description = f"{advice_slip_formatted['slip']['advice']}"
+                    embedVar.set_footer(
+                        text=f"Requested by {ctx.user.name}",
+                        icon_url=ctx.user.display_avatar,
+                    )
+                    await ctx.respond(embed=embedVar)
+                except Exception as e:
+                    embedVar = discord.Embed()
+                    embedVar.description = "The query failed. Please try again."
+                    embedVar.add_field(name="Reason", value=e, inline=True)
+                    await ctx.respond(embed=embedVar)
+
+    asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
+
+
+def setup(bot):
+    bot.add_cog(advice_slip(bot))
diff --git a/Bot/Cogs/bot-info.py b/Bot/Cogs/bot-info.py
index f85f683..188b8a0 100644
--- a/Bot/Cogs/bot-info.py
+++ b/Bot/Cogs/bot-info.py
@@ -1,53 +1,52 @@
-import asyncio
-import random
-
-import discord
-import uvloop
-from discord.commands import slash_command
-from discord.ext import commands
-
-
-def discord_colors():
-    colors = [0x8B77BE, 0xA189E2, 0xCF91D1, 0x5665AA, 0xA3A3D2]
-    return random.choice(colors)
-
-
-def fast_embed(content):
-    return discord.Embed(description=content, color=discord_colors())
-
-
-class botInfo(commands.Cog):
-    def __init__(self, bot):
-        self.bot = bot
-
-    @slash_command(
-        name="botinfo",
-        description="Returns Stats for Rin",
-        guild_ids=[866199405090308116],
-    )
-    async def botinfo(self, ctx):
-        bot = self.bot
-        name = bot.user.name
-        guilds = bot.guilds
-        total_members = 0
-        for guild in guilds:
-            total_members += guild.member_count
-        average_members_per_guild = total_members / len(guilds)
-        embed = discord.Embed(color=discord_colors())
-        embed.title = "Bot Info"
-        embed.add_field(name="Name", value=name, inline=False)
-        embed.add_field(name="Servers", value=len(guilds), inline=False)
-        embed.add_field(name="Total Users", value=total_members, inline=False)
-        embed.add_field(
-            name="Average Users Per Server",
-            value=average_members_per_guild,
-            inline=False,
-        )
-        embed.set_thumbnail(url=bot.user.display_avatar)
-        await ctx.respond(embed=embed)
-
-    asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
-
-
-def setup(bot):
-    bot.add_cog(botInfo(bot))
+import asyncio
+import random
+
+import discord
+import uvloop
+from discord.commands import slash_command
+from discord.ext import commands
+
+
+def discord_colors():
+    colors = [0x8B77BE, 0xA189E2, 0xCF91D1, 0x5665AA, 0xA3A3D2]
+    return random.choice(colors)
+
+
+def fast_embed(content):
+    return discord.Embed(description=content, color=discord_colors())
+
+
+class botInfo(commands.Cog):
+    def __init__(self, bot):
+        self.bot = bot
+
+    @slash_command(
+        name="botinfo",
+        description="Returns Stats for Rin"
+    )
+    async def botinfo(self, ctx):
+        bot = self.bot
+        name = bot.user.name
+        guilds = bot.guilds
+        total_members = 0
+        for guild in guilds:
+            total_members += guild.member_count
+        average_members_per_guild = total_members / len(guilds)
+        embed = discord.Embed(color=discord_colors())
+        embed.title = "Bot Info"
+        embed.add_field(name="Name", value=name, inline=False)
+        embed.add_field(name="Servers", value=len(guilds), inline=False)
+        embed.add_field(name="Total Users", value=total_members, inline=False)
+        embed.add_field(
+            name="Average Users Per Server",
+            value=average_members_per_guild,
+            inline=False,
+        )
+        embed.set_thumbnail(url=bot.user.display_avatar)
+        await ctx.respond(embed=embed)
+
+    asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
+
+
+def setup(bot):
+    bot.add_cog(botInfo(bot))
diff --git a/Bot/Cogs/deviantart.py b/Bot/Cogs/deviantart.py
index c059861..b8ac141 100644
--- a/Bot/Cogs/deviantart.py
+++ b/Bot/Cogs/deviantart.py
@@ -46,8 +46,7 @@ class DeviantArtV1(commands.Cog):
 
     @slash_command(
         name="deviantart-item",
-        description="Returns info about a deviation on DeviantArt",
-        guild_ids=[866199405090308116],
+        description="Returns info about a deviation on DeviantArt"
     )
     async def da(self, ctx, *, deviation_id: Option(str, "The ID for the Deviation")):
         token = tokenFetcher()
diff --git a/Bot/Cogs/discord-bots.py b/Bot/Cogs/discord-bots.py
index 633c17e..5030277 100644
--- a/Bot/Cogs/discord-bots.py
+++ b/Bot/Cogs/discord-bots.py
@@ -19,8 +19,7 @@ class DiscordBotsV1(commands.Cog):
 
     @slash_command(
         name="discord-bots-search",
-        description="Searches for any Discord Bots listed on discord.bots.gg",
-        guild_ids=[866199405090308116],
+        description="Searches for any Discord Bots listed on discord.bots.gg"
     )
     async def discordBotsSearch(
         self,
@@ -80,8 +79,7 @@ class DiscordBotsV2(commands.Cog):
 
     @slash_command(
         name="discord-bots-id",
-        description="Searches for any Discord Bots listed on discord.bots.gg via the Discord Bot's ID",
-        guild_ids=[866199405090308116],
+        description="Searches for any Discord Bots listed on discord.bots.gg via the Discord Bot's ID"
     )
     async def discordBotsID(
         self, ctx, *, bot_id: Option(str, "The ID of the Discord Bot")
diff --git a/Bot/Cogs/first-frc-events.py b/Bot/Cogs/first-frc-events.py
index 4c9f8c6..2f2f54e 100644
--- a/Bot/Cogs/first-frc-events.py
+++ b/Bot/Cogs/first-frc-events.py
@@ -20,8 +20,7 @@ class FirstFRCV1(commands.Cog):
 
     @slash_command(
         name="frc-season",
-        description="Returns the season summary for the current FRC season (may cause spam)",
-        guild_ids=[866199405090308116],
+        description="Returns the season summary for the current FRC season (may cause spam)"
     )
     async def frcSeason(
         self, ctx, *, season: Option(int, "The year of the event (eg 2020, 2021, etc)")
@@ -63,8 +62,7 @@ class FirstFRCV2(commands.Cog):
 
     @slash_command(
         name="frc-events",
-        description="Returns events for the current FRC season",
-        guild_ids=[866199405090308116],
+        description="Returns events for the current FRC season"
     )
     async def frcEvents(
         self,
diff --git a/Bot/Cogs/help.py b/Bot/Cogs/help.py
index 62024b8..0fe1c8d 100644
--- a/Bot/Cogs/help.py
+++ b/Bot/Cogs/help.py
@@ -14,8 +14,7 @@ class helper(commands.Cog):
 
     @slash_command(
         name="help",
-        description="The Help Page for Rin",
-        guild_ids=[866199405090308116],
+        description="The Help Page for Rin"
     )
     async def rinHelp(
         self,
diff --git a/Bot/Cogs/hypixel.py b/Bot/Cogs/hypixel.py
index d5d30ed..0b4e2e7 100644
--- a/Bot/Cogs/hypixel.py
+++ b/Bot/Cogs/hypixel.py
@@ -21,7 +21,6 @@ class hypixel_api(commands.Cog):
     @slash_command(
         name="hypixel-user",
         description="Returns Info About A Minecraft User on Hypixel",
-        guild_ids=[866199405090308116],
     )
     async def hypixel_user(self, ctx, *, uuid: str):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -93,7 +92,6 @@ class hypixel_player_count(commands.Cog):
     @slash_command(
         name="hypixel-count",
         description="Returns the Amount of Players in each game server",
-        guild_ids=[866199405090308116],
     )
     async def player_count(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -129,7 +127,6 @@ class hypixel_status(commands.Cog):
     @slash_command(
         name="hypixel-player-status",
         description="Returns the given player's online status",
-        guild_ids=[866199405090308116],
     )
     async def player_status(self, ctx, *, uuid: str):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -184,7 +181,6 @@ class networkPunishments(commands.Cog):
     @slash_command(
         name="hypixel-punishment-stats",
         description="Shows the stats for the amount of punishments given on Hypixel (All Users)",
-        guild_ids=[866199405090308116],
     )
     async def punishment_stats(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
diff --git a/Bot/Cogs/jikan.py b/Bot/Cogs/jikan.py
index c5b0574..f7455d0 100644
--- a/Bot/Cogs/jikan.py
+++ b/Bot/Cogs/jikan.py
@@ -15,7 +15,6 @@ class JikanV1(commands.Cog):
     @slash_command(
         name="jikan-anime",
         description="Fetches up to 5 anime from MAL",
-        guild_ids=[866199405090308116],
     )
     async def anime(self, ctx, *, anime_name: Option(str, "Name of the anime")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -94,7 +93,6 @@ class JikanV2(commands.Cog):
     @slash_command(
         name="jikan-manga",
         description="Fetches up to 5 mangas from MAL",
-        guild_ids=[866199405090308116],
     )
     async def manga(self, ctx, *, manga_name: Option(str, "Name of the manga")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -182,7 +180,6 @@ class JikanV3(commands.Cog):
     @slash_command(
         name="jikan-random-anime",
         description="Fetches a random anime from MAL",
-        guild_ids=[866199405090308116],
     )
     async def animeRandom(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -235,7 +232,6 @@ class JikanV4(commands.Cog):
     @slash_command(
         name="jikan-random-manga",
         description="Fetches a random manga from MAL",
-        guild_ids=[866199405090308116],
     )
     async def mangaRandom(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -286,7 +282,6 @@ class JikanV5(commands.Cog):
     @slash_command(
         name="jikan-seasons",
         description="Returns animes for the given season and year",
-        guild_ids=[866199405090308116],
     )
     async def season(
         self,
@@ -354,7 +349,6 @@ class JikanV6(commands.Cog):
     @slash_command(
         name="jikan-season-upcoming",
         description="Returns anime for the upcoming season (will return ALL of it)",
-        guild_ids=[866199405090308116],
     )
     async def seasonsUpcoming(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -405,7 +399,6 @@ class JikanV7(commands.Cog):
     @slash_command(
         name="jikan-user-profile",
         description="Returns info about given user on MAL",
-        guild_ids=[866199405090308116],
     )
     async def userLookup(self, ctx, *, username: Option(str, "Username of the user")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
diff --git a/Bot/Cogs/jisho.py b/Bot/Cogs/jisho.py
index 40d4717..8140ae9 100644
--- a/Bot/Cogs/jisho.py
+++ b/Bot/Cogs/jisho.py
@@ -15,7 +15,6 @@ class jishoDict(commands.Cog):
     @slash_command(
         name="jisho",
         description="Searches for words on Jisho",
-        guild_ids=[866199405090308116],
     )
     async def jishoSearcher(
         self,
diff --git a/Bot/Cogs/mangadex.py b/Bot/Cogs/mangadex.py
index 17c9d3f..cb577de 100644
--- a/Bot/Cogs/mangadex.py
+++ b/Bot/Cogs/mangadex.py
@@ -15,7 +15,6 @@ class MangaDexV1(commands.Cog):
     @slash_command(
         name="mangadex-search",
         description="Searches for up to 5 manga on MangaDex",
-        guild_ids=[866199405090308116],
     )
     async def manga(self, ctx, *, manga: Option(str, "Name of Manga")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -132,7 +131,6 @@ class MangaDexV2(commands.Cog):
     @slash_command(
         name="mangadex-random",
         description="Returns a random manga from MangaDex",
-        guild_ids=[866199405090308116],
     )
     async def manga_random(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -246,7 +244,6 @@ class MangaDexV3(commands.Cog):
     @slash_command(
         name="mangadex-scanlation-search",
         description="Returns info about a scanlation group on MangaDex",
-        guild_ids=[866199405090308116],
     )
     async def scanlation_search(
         self, ctx, *, name: Option(str, "The name of the scanlation group")
@@ -307,7 +304,6 @@ class MangaDexV4(commands.Cog):
     @slash_command(
         name="mangadex-scanlation-id",
         description="Returns info about a scanlation group on MangaDex (Done via ID)",
-        guild_ids=[866199405090308116],
     )
     async def scanlation_id(
         self, ctx, *, scanlation_id: Option(str, "The ID of the scanlation group")
@@ -362,7 +358,6 @@ class MangaDexV5(commands.Cog):
     @slash_command(
         name="mangadex-user",
         description="Returns info about a user on MangaDex",
-        guild_ids=[866199405090308116],
     )
     async def user(self, ctx, *, user_id: Option(str, "The ID of the user")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -400,7 +395,6 @@ class MangaDexV6(commands.Cog):
     @slash_command(
         name="mangadex-author",
         description="Returns info about an author on MangaDex",
-        guild_ids=[866199405090308116],
     )
     async def author(self, ctx, *, author_name: Option(str, "The name of the author")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
diff --git a/Bot/Cogs/mcsrvstats.py b/Bot/Cogs/mcsrvstats.py
index 5f2a0d1..ca115db 100644
--- a/Bot/Cogs/mcsrvstats.py
+++ b/Bot/Cogs/mcsrvstats.py
@@ -15,7 +15,6 @@ class mcsrvstats(commands.Cog):
     @slash_command(
         name="java",
         description="Returns info about the given Minecraft Java server",
-        guild_ids=[866199405090308116],
     )
     async def java(self, ctx, server: str):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -100,7 +99,6 @@ class bedrock_mcsrvstats(commands.Cog):
     @slash_command(
         name="bedrock",
         description="Returns info about the given Minecraft Bedrock server",
-        guild_ids=[866199405090308116],
     )
     async def bedrock(self, ctx, server: str):
         async with aiohttp.ClientSession(json_serialize=orjson.loads) as session:
diff --git a/Bot/Cogs/modrinth.py b/Bot/Cogs/modrinth.py
index 36eba2a..bb125b4 100644
--- a/Bot/Cogs/modrinth.py
+++ b/Bot/Cogs/modrinth.py
@@ -15,7 +15,6 @@ class ModrinthV1(commands.Cog):
     @slash_command(
         name="modrinth-search",
         description="Searches for up to 5 mods on Modrinth",
-        guild_ids=[866199405090308116],
     )
     async def modrinthSearch(
         self,
@@ -66,7 +65,6 @@ class ModrinthV2(commands.Cog):
     @slash_command(
         name="modrinth-mod",
         description="Gets info about the mod requested",
-        guild_ids=[866199405090308116],
     )
     async def modrinthProject(
         self, ctx, *, mod_slug: Option(str, "The ID or slug of the project")
@@ -123,7 +121,6 @@ class ModrinthV3(commands.Cog):
     @slash_command(
         name="modrinth-mod-versions",
         description="Lists out all of the versions for a mod (may cause spam)",
-        guild_ids=[866199405090308116],
     )
     async def modrinthProjectVersion(
         self,
@@ -196,7 +193,6 @@ class ModrinthV4(commands.Cog):
     @slash_command(
         name="modrinth-mod-version",
         description="Returns info on the given mod version ID",
-        guild_ids=[866199405090308116],
     )
     async def modrinthModVersion(
         self, ctx, *, mod_version_id: Option(str, "The ID of the mod version")
@@ -243,7 +239,6 @@ class ModrinthV5(commands.Cog):
     @slash_command(
         name="modrinth-user",
         description="Returns info on the given user",
-        guild_ids=[866199405090308116],
     )
     async def modrinthUser(
         self, ctx, *, username: Option(str, "The username or ID of the user")
@@ -283,7 +278,6 @@ class ModrinthV6(commands.Cog):
     @slash_command(
         name="modrinth-user-projects",
         description="Returns info on the given user's projects",
-        guild_ids=[866199405090308116],
     )
     async def modrinthUserProjects(
         self, ctx, *, username: Option(str, "The username or ID of the user")
@@ -347,7 +341,6 @@ class ModrinthV7(commands.Cog):
     @slash_command(
         name="modrinth-project-team-members",
         description="Returns the team memebers of a project",
-        guild_ids=[866199405090308116],
     )
     async def modrinthProjectTeamMembers(
         self, ctx, *, project: Option(str, "The slug or ID of the project")
@@ -392,7 +385,6 @@ class ModrinthV8(commands.Cog):
     @slash_command(
         name="modrinth-team-members",
         description="Returns the members within the given team",
-        guild_ids=[866199405090308116],
     )
     async def modrinthTeamMembers(
         self, ctx, *, team_id: Option(str, "The ID of the team")
diff --git a/Bot/Cogs/openai-gpt3.py b/Bot/Cogs/openai-gpt3.py
index d56f82d..46582b5 100644
--- a/Bot/Cogs/openai-gpt3.py
+++ b/Bot/Cogs/openai-gpt3.py
@@ -22,7 +22,6 @@ class OpenAI1(commands.Cog):
     @slash_command(
         name="openai-complete",
         description="Completes a sentence using OpenAI's GPT-3 AI",
-        guild_ids=[866199405090308116],
     )
     async def openaiComplete(
         self,
@@ -70,7 +69,6 @@ class OpenAI2(commands.Cog):
     @slash_command(
         name="openai-classify",
         description="Classifies a sentence using OpenAI's GPT-3 AI",
-        guild_ids=[866199405090308116],
     )
     async def openaiClassify(
         self,
@@ -134,7 +132,6 @@ class OpenAI3(commands.Cog):
     @slash_command(
         name="openai-answers",
         description="Forms an answer based on your question",
-        guild_ids=[866199405090308116],
     )
     async def openaiAnswers(
         self,
diff --git a/Bot/Cogs/qrcode.py b/Bot/Cogs/qrcode.py
index a143163..4a217e0 100644
--- a/Bot/Cogs/qrcode.py
+++ b/Bot/Cogs/qrcode.py
@@ -33,18 +33,6 @@ class qrcode_maker(commands.Cog):
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
 
-    @code.error
-    async def on_message_error(
-        self, ctx: commands.Context, error: commands.CommandError
-    ):
-        if isinstance(error, commands.MissingRequiredArgument):
-            embedVar = discord.Embed(color=discord.Color.from_rgb(255, 51, 51))
-            embedVar.description = f"Missing a required argument: {error.param}"
-            msg = await ctx.send(embed=embedVar, delete_after=10)
-            await msg.delete(delay=10)
-
-    asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
-
 
 def setup(bot):
     bot.add_cog(qrcode_maker(bot))
diff --git a/Bot/Cogs/reddit.py b/Bot/Cogs/reddit.py
index c98fee6..ac57b73 100644
--- a/Bot/Cogs/reddit.py
+++ b/Bot/Cogs/reddit.py
@@ -22,7 +22,6 @@ class RedditV1(commands.Cog):
     @slash_command(
         name="reddit",
         description="Searches on reddit for content",
-        guild_ids=[866199405090308116],
     )
     async def reddit(
         self,
@@ -79,7 +78,6 @@ class RedditV2(commands.Cog):
     @slash_command(
         name="reddit-new",
         description="Returns 5 new posts from any subreddit",
-        guild_ids=[866199405090308116],
     )
     async def redditNew(
         self, ctx, *, subreddit: Option(str, "The subreddit to search")
@@ -131,7 +129,6 @@ class RedditV3(commands.Cog):
     @slash_command(
         name="reddit-comments",
         description="Returns up to 10 comments from a given post ID",
-        guild_ids=[866199405090308116],
     )
     async def redditComments(self, ctx, *, post_id: Option(str, "ID of post")):
         async with asyncpraw.Reddit(
@@ -166,7 +163,6 @@ class RedditV4(commands.Cog):
     @slash_command(
         name="reddit-user",
         description="Provides info about the given Redditor",
-        guild_ids=[866199405090308116],
     )
     async def redditor(self, ctx, *, redditor: Option(str, "The name of the Redditor")):
         async with asyncpraw.Reddit(
@@ -198,7 +194,6 @@ class RedditV5(commands.Cog):
     @slash_command(
         name="reddit-user-comments",
         description="Returns up to 10 comments from a given Redditor",
-        guild_ids=[866199405090308116],
     )
     async def redditorComments(
         self, ctx, *, redditor: Option(str, "The name of the Redditor")
@@ -234,7 +229,6 @@ class RedditV6(commands.Cog):
     @slash_command(
         name="reddit-hot",
         description="Returns 5 hot posts from any subreddit",
-        guild_ids=[866199405090308116],
     )
     async def redditNew(
         self, ctx, *, subreddit: Option(str, "The subreddit to search")
@@ -286,7 +280,6 @@ class RedditV7(commands.Cog):
     @slash_command(
         name="reddit-top",
         description="Returns 5 top posts from any subreddit",
-        guild_ids=[866199405090308116],
     )
     async def redditNew(
         self, ctx, *, subreddit: Option(str, "The subreddit to search")
diff --git a/Bot/Cogs/rinhelp.py b/Bot/Cogs/rinhelp.py
index 51a21ce..d972b96 100644
--- a/Bot/Cogs/rinhelp.py
+++ b/Bot/Cogs/rinhelp.py
@@ -15,7 +15,6 @@ class rinhelp(commands.Cog):
     @slash_command(
         name="rinhelp",
         description="The Help Page for Rin",
-        guild_ids=[866199405090308116],
     )
     async def rinHelp(
         self,
diff --git a/Bot/Cogs/rininfo.py b/Bot/Cogs/rininfo.py
index 9be3dcc..5b8c1cf 100644
--- a/Bot/Cogs/rininfo.py
+++ b/Bot/Cogs/rininfo.py
@@ -11,7 +11,7 @@ class info(commands.Cog):
         self.bot = bot
 
     @slash_command(
-        name="rininfo", description="Info about Rin", guild_ids=[866199405090308116]
+        name="rininfo", description="Info about Rin"
     )
     async def rinInfo(self, ctx):
         bot = self.bot
diff --git a/Bot/Cogs/rininvite.py b/Bot/Cogs/rininvite.py
index 3ecb861..ac00c42 100644
--- a/Bot/Cogs/rininvite.py
+++ b/Bot/Cogs/rininvite.py
@@ -1,24 +1,26 @@
-import asyncio
-
-import discord
-import uvloop
-from discord.ext import commands
-
-
-class InviteV1(commands.Cog):
-    def __init__(self, bot):
-        self.bot = bot
-
-    @commands.command(name="rininvite", aliases=["invite"])
-    async def invite(self, ctx):
-        bot = self.bot
-        embedVar = discord.Embed()
-        embedVar.description = "[Top.gg](https://top.gg/bot/865883525932253184/invite)\n[Fallback URL](https://discord.com/api/oauth2/authorize?client_id=865883525932253184&permissions=150055930992&scope=bot)"
-        embedVar.set_author(name="Invite", icon_url=bot.user.display_avatar)
-        await ctx.send(embed=embedVar)
-
-    asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
-
-
-def setup(bot):
-    bot.add_cog(InviteV1(bot))
+import asyncio
+
+import discord
+import uvloop
+from discord.ext import commands
+from discord.commands import slash_command
+from lxml.html._diffcommand import description
+
+
+class InviteV1(commands.Cog):
+    def __init__(self, bot):
+        self.bot = bot
+
+    @slash_command(name="rininvite", description="Invite links for Rin")
+    async def invite(self, ctx):
+        bot = self.bot
+        embedVar = discord.Embed()
+        embedVar.description = "[Top.gg](https://top.gg/bot/865883525932253184/invite)\n[Fallback URL](https://discord.com/api/oauth2/authorize?client_id=865883525932253184&permissions=150055930992&scope=bot)"
+        embedVar.set_author(name="Invite", icon_url=bot.user.display_avatar)
+        await ctx.respond(embed=embedVar)
+
+    asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
+
+
+def setup(bot):
+    bot.add_cog(InviteV1(bot))
diff --git a/Bot/Cogs/rinping.py b/Bot/Cogs/rinping.py
index 4e5537f..a5551cd 100644
--- a/Bot/Cogs/rinping.py
+++ b/Bot/Cogs/rinping.py
@@ -3,15 +3,13 @@ import asyncio
 import discord
 import uvloop
 from discord.ext import commands
-
+from discord.commands import slash_command
 
 class rinping(commands.Cog):
     def __init__(self, bot):
         self.bot = bot
 
-    @commands.command(
-        name="ping",
-    )
+    @slash_command(name="ping", description="Measures the ping of Rin")
     async def on_message(self, ctx):
         try:
             ping_embed = discord.Embed()
@@ -21,7 +19,7 @@ class rinping(commands.Cog):
             ping_embed = discord.Embed()
             ping_embed.description = "The command was not successful"
             ping_embed.add_field(name="Reason", value=e, inline=True)
-            await ctx.send(embed=ping_embed)
+            await ctx.respond(embed=ping_embed)
 
     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
 
diff --git a/Bot/Cogs/spiget.py b/Bot/Cogs/spiget.py
index a6e4550..123a30b 100644
--- a/Bot/Cogs/spiget.py
+++ b/Bot/Cogs/spiget.py
@@ -15,7 +15,6 @@ class SpigetV2(commands.Cog):
     @slash_command(
         name="spiget-search",
         description="Finds up to 5 plugins matching the name of the given plugin",
-        guild_ids=[866199405090308116],
     )
     async def spigetSearch(
         self, ctx, *, plugin_name: Option(str, "The name of the plugin")
@@ -130,7 +129,6 @@ class SpigetV3(commands.Cog):
     @slash_command(
         name="spiget-author",
         description="Returns some info about a plugin author",
-        guild_ids=[866199405090308116],
     )
     async def spigetAuthor(
         self, ctx, *, author_name: Option(str, "Name of the plugin author")
@@ -174,7 +172,6 @@ class SpigetV4(commands.Cog):
     @slash_command(
         name="spiget-stats",
         description="Returns stats for SpigotMC",
-        guild_ids=[866199405090308116],
     )
     async def spigetStats(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -212,7 +209,6 @@ class SpigetV5(commands.Cog):
     @slash_command(
         name="spiget-status",
         description="Returns the status of Spiget (HTTP Status)",
-        guild_ids=[866199405090308116],
     )
     async def spigetStatus(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
diff --git a/Bot/Cogs/tenor.py b/Bot/Cogs/tenor.py
index 9d263ee..e950ea7 100644
--- a/Bot/Cogs/tenor.py
+++ b/Bot/Cogs/tenor.py
@@ -21,7 +21,6 @@ class TenorV1(commands.Cog):
     @slash_command(
         name="tenor-search-multiple",
         description="Searches for up to 5 gifs on Tenor",
-        guild_ids=[866199405090308116],
     )
     async def tenor_search(
         self, ctx, *, search_term: Option(str, "Search Term for GIFs")
@@ -80,7 +79,6 @@ class TenorV2(commands.Cog):
     @slash_command(
         name="tenor-search-one",
         description="Searches for a single gif on Tenor",
-        guild_ids=[866199405090308116],
     )
     async def tenor_search_one(
         self, ctx, *, search_one_term: Option(str, "Search Term for GIF")
@@ -121,7 +119,6 @@ class TenorV3(commands.Cog):
     @slash_command(
         name="tenor-trending",
         description="Returns up to 5 trending gifs from Tenor",
-        guild_ids=[866199405090308116],
     )
     async def tenor_trending(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -181,7 +178,6 @@ class TenorV4(commands.Cog):
     @slash_command(
         name="tenor-search-suggestions",
         description="Gives a list of suggested search terms based on given topic",
-        guild_ids=[866199405090308116],
     )
     async def tenor_search_suggestions(
         self,
@@ -220,7 +216,6 @@ class TenorV5(commands.Cog):
     @slash_command(
         name="tenor-trending-terms",
         description="Gives a list of trending search terms on Tenor",
-        guild_ids=[866199405090308116],
     )
     async def tenor_trending_terms(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -253,7 +248,6 @@ class TenorV6(commands.Cog):
     @slash_command(
         name="tenor-gif",
         description="Gives a gif based on the given GIF ID",
-        guild_ids=[866199405090308116],
     )
     async def tenor_gif(self, ctx, *, search_gif: Option(int, "Tenor GIF ID")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -315,7 +309,6 @@ class TenorV7(commands.Cog):
     @slash_command(
         name="tenor-random",
         description="Gives a random gif from Tenor based on given search term",
-        guild_ids=[866199405090308116],
     )
     async def tenor_random(
         self, ctx, *, search_random_term: Option(str, "Search Term")
diff --git a/Bot/Cogs/top-gg.py b/Bot/Cogs/top-gg.py
index 4f5f932..b049c0f 100644
--- a/Bot/Cogs/top-gg.py
+++ b/Bot/Cogs/top-gg.py
@@ -21,7 +21,6 @@ class TopGGV1(commands.Cog):
     @slash_command(
         name="topgg-search",
         description="Returns Info about the given Discord bot on Top.gg",
-        guild_ids=[866199405090308116],
     )
     async def topgg_search_one(self, ctx, bot_id: Option(str, "Discord Bot ID")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -67,7 +66,6 @@ class TopGGV2(commands.Cog):
     @slash_command(
         name="topgg-search-users",
         description="Returns Info about the given user on Top.gg",
-        guild_ids=[866199405090308116],
     )
     async def topgg_search_users(self, ctx, *, user_id: Option(str, "User ID")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
diff --git a/Bot/Cogs/twitter.py b/Bot/Cogs/twitter.py
index 2ea8976..6ddc0ed 100644
--- a/Bot/Cogs/twitter.py
+++ b/Bot/Cogs/twitter.py
@@ -21,7 +21,6 @@ class TwitterV1(commands.Cog):
     @slash_command(
         name="twitter-search",
         description="Returns up to 5 recent tweets given the Twitter user",
-        guild_ids=[866199405090308116],
     )
     async def twitter_search(self, ctx, *, user: str):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -132,7 +131,6 @@ class TwitterV2(commands.Cog):
     @slash_command(
         name="twitter-user",
         description="Returns Info about the given Twitter user",
-        guild_ids=[866199405090308116],
     )
     async def twitter_user(self, ctx, *, user: str):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
diff --git a/Bot/Cogs/uptime.py b/Bot/Cogs/uptime.py
index f4b7946..4ae933c 100644
--- a/Bot/Cogs/uptime.py
+++ b/Bot/Cogs/uptime.py
@@ -20,7 +20,6 @@ class UptimeV1(commands.Cog):
     @slash_command(
         name="uptime",
         description="Returns Uptime for Rin",
-        guild_ids=[866199405090308116],
     )
     async def botUptime(self, ctx):
         uptime = datetime.timedelta(
diff --git a/Bot/Cogs/version.py b/Bot/Cogs/version.py
index d1d4c4e..612b8fe 100644
--- a/Bot/Cogs/version.py
+++ b/Bot/Cogs/version.py
@@ -13,7 +13,6 @@ class VersionV1(commands.Cog):
     @slash_command(
         name="version",
         description="Returns Current Version of Rin",
-        guild_ids=[866199405090308116],
     )
     async def version(self, ctx):
         embedVar = discord.Embed()
diff --git a/Bot/Cogs/waifu-generator.py b/Bot/Cogs/waifu-generator.py
index ab444ce..f07ef3d 100644
--- a/Bot/Cogs/waifu-generator.py
+++ b/Bot/Cogs/waifu-generator.py
@@ -16,7 +16,6 @@ class waifu(commands.Cog):
     @slash_command(
         name="waifu",
         description="Gives you a random waifu",
-        guild_ids=[866199405090308116],
     )
     async def on_message(self, ctx):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
diff --git a/Bot/Cogs/waifu-pics.py b/Bot/Cogs/waifu-pics.py
index ad141a2..ff52fda 100644
--- a/Bot/Cogs/waifu-pics.py
+++ b/Bot/Cogs/waifu-pics.py
@@ -16,7 +16,6 @@ class waifuPics(commands.Cog):
     @slash_command(
         name="waifupics",
         description="Returns a random image of a waifu from waifu.pics",
-        guild_ids=[866199405090308116],
     )
     async def on_messsage(self, ctx):
         waifu_list = [
diff --git a/Bot/Cogs/youtube.py b/Bot/Cogs/youtube.py
index 96ec3c2..8201c84 100644
--- a/Bot/Cogs/youtube.py
+++ b/Bot/Cogs/youtube.py
@@ -21,7 +21,6 @@ class YoutubeV1(commands.Cog):
     @slash_command(
         name="youtube-search",
         description="Finds up to 5 videos on YouTube based on the given search term",
-        guild_ids=[866199405090308116],
     )
     async def youtube_search(self, ctx, *, search: Option(str, "Video Search Term")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -84,7 +83,6 @@ class YoutubeV2(commands.Cog):
     @slash_command(
         name="youtube-channel",
         description="Returns Given YouTube Channel Info",
-        guild_ids=[866199405090308116],
     )
     async def youtube_channel(self, ctx, *, channel: Option(str, "Channel Name")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -168,7 +166,6 @@ class YoutubeV3(commands.Cog):
     @slash_command(
         name="youtube-playlists",
         description="Returns up to 5 YouTube playlists based on the given YT channel",
-        guild_ids=[866199405090308116],
     )
     async def youtube_playlists(
         self, ctx, *, channel_name: Option(str, "Channel Name")
@@ -260,7 +257,6 @@ class YoutubeV4(commands.Cog):
     @slash_command(
         name="youtube-comments",
         description="Returns up to 5 comments within a given video",
-        guild_ids=[866199405090308116],
     )
     async def youtube_comments(self, ctx, *, vid_id: Option(str, "YT Video ID")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
@@ -370,7 +366,6 @@ class YoutubeV5(commands.Cog):
     @slash_command(
         name="youtube-video",
         description="Provides info about the given video",
-        guild_ids=[866199405090308116],
     )
     async def youtube_video(self, ctx, *, video_id: Option(str, "YT Video ID")):
         async with aiohttp.ClientSession(json_serialize=orjson.dumps) as session:
-- 
2.35.1

