- name: Setup PostgreSQL and Redis
  hosts: dev
  become: yes
  become_method: sudo
  roles:
    - role: geerlingguy.postgresql
    - role: geerlingguy.redis

- name: Setup Python and Poetry
  hosts: dev
  roles:
    - role: staticdev.pyenv

- name: Install any dependecies
  hosts: dev
  become: yes
  become_method: sudo
  tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        update_cache: yes
        pkg:
          - curl
          - libffi-dev
          - git
          - libnacl-dev
          - libopus-dev
          - python3-dev

- name: Compile Python and install Poetry
  hosts: dev
  vars:
    virtualenvs_inproject: true
    virtualenvs_prefer_active_python: true
    python_version: 3.11.4
  environment:
    PATH: "{{ ansible_env.HOME }}/pyenv/bin:{{ ansible_env.PATH }}"
  tasks:
    - name: Install Python
      ansible.builtin.shell: pyenv install "{{ python_version }}" -v
    - name: Set global Python version
      ansible.builtin.shell: pyenv global "{{ python_version }}"
    - name: Rehash pyenv
      ansible.builtin.shell: pyenv rehash
      
- name: Setup Poetry
  hosts: dev
  vars:
    virtualenvs_inproject: true
    virtualenvs_prefer_active_python: true
  tasks:
    - name: Install Poetry # noqa command-instead-of-module
      ansible.builtin.shell: curl -sSL https://install.python-poetry.org | python3 -
      args:
        creates: "{{ ansible_env.HOME }}/.local/bin/poetry"

    - name: Check Poetry virtualenvs.in-project config
      ansible.builtin.command: ~/.local/bin/poetry config virtualenvs.in-project
      register: poetry_in_project
      changed_when: false
      when: virtualenvs_inproject

    - name: Configure Poetry virtualenvs.in-project
      ansible.builtin.command: ~/.local/bin/poetry config virtualenvs.in-project true
      when: virtualenvs_inproject and poetry_in_project.stdout != "true"

    - name: Check Poetry virtualenvs.prefer-active-python config
      ansible.builtin.command: ~/.local/bin/poetry config virtualenvs.prefer-active-python
      register: poetry_prefer_active_python
      changed_when: false
      when: virtualenvs_prefer_active_python

    - name: Configure Poetry virtualenvs.prefer-active-python
      ansible.builtin.command: ~/.local/bin/poetry config virtualenvs.prefer-active-python true
      when: virtualenvs_prefer_active_python and poetry_prefer_active_python.stdout != "true"

- name: Setup Kumiko repo
  hosts: dev
  vars:
    kumiko_home: "{{ lookup('env', 'HOME') }}/Kumiko"
    local_bin: "$PATH:{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.HOME }}/pyenv/bin"
    python_version: 3.11.4
  tasks:
    - name: Ensure that local bin is in path
      ansible.builtin.shell: |
        export PATH={{ local_bin }}
        echo export PATH={{ local_bin }} >> {{ ansible_env.HOME }}/.bashrc
    - name: Clone Kumiko repo
      ansible.builtin.git:
        repo: "https://github.com/No767/Kumiko.git"
        dest: "{{ kumiko_home }}"
        version: dev
    - name: Use local python version
      ansible.builtin.shell: pyenv local {{  python_version }}
    - name: Install Poetry dependencies
      ansible.builtin.shell: |
        poetry env use {{  python_version }}
        poetry install
      args:
        chdir: "{{ kumiko_home }}"
    - name: Setup Dev ENV file
      ansible.builtin.shell: cp Envs/dev.env Bot/.env
      args:
        chdir: "{{ kumiko_home }}"
        