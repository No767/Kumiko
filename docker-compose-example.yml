version: "3.9"
services:
  postgres:
    container_name: Kumiko-Postgres
    build:
      context: .
      dockerfile: ./Postgres-Docker/Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    ports:
      - 5432:5432

  rabbitmq:
    container_name: Kumiko-RabbitMQ
    image: rabbitmq:3-management
    hostname: kumiko_prod
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - .env

  kumiko:
    container_name: Kumiko
    image: no767/kumiko:latest
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 0s
        max_attempts: 5
        window: 120s
      mode: replicated
    command: sh -c '/Kumiko/wait-for postgres:5432 -- echo "[Wait-for] PostgreSQL is fully up. Waiting for RabbitMQ" && /Kumiko/wait-for rabbitmq:5672 -- echo "[Wait-for] Both PostgreSQL and RabbitMQ are fully ready. Starting up Kumiko" && /Kumiko/start.sh'
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    
  mongodb:
    container_name: Kumiko-MongoDB
    image: mongo:latest
    restart: always
    env_file:
      - .env
    ports:
      - 27017:27017
    volumes:
      - mongodb_volume:/data/db


  redis:
    container_name: Kumiko-Redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_volume:/data
    command: redis-server --save 60 1 --loglevel warning

volumes:
  postgres_volume:
  mongodb_volume:
  redis_volume:
