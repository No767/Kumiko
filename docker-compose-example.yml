# This docker compose file is actually not used by Kumiko, since Kumiko relies on the db and other stuff via a seperate server
# This is just for example
# MAKE SURE TO CHANGE THE VALUES FOR KUMIKO

version: "3.9"
services:
  kumiko:
    container_name: Kumiko
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 0s
        max_attempts: 3
        window: 120s
      mode: replicated
    env_file:
      - .env-docker-example # Rename this to .env
    
  postgres:
    container_name: Kumiko-Postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=Kumiko
      - POSTGRES_DB=Kumiko
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    ports:
      - 5432:5432

  mongodb:
    container_name: Kumiko-MongoDB
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=Kumiko
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - 27017:27017
    volumes:
      - mongodb_volume:/data/db

  rabbitmq:
    container_name: Kumiko-RabbitMQ
    image: rabbitmq:3-management
    hostname: kumiko_prod
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=Kumiko
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_DEFAULT_VHOST=kumiko

  redis:
    container_name: Kumiko-Redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_volume:/data
    command: redis-server --save 60 1 --loglevel warning

volumes:
  postgres_volume:
  mongodb_volume:
  redis_volume: